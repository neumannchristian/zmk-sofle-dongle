#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hrm_l: hrm_l {
        compatible = "zmk,behavior-hold-tap";
        label = "HRM_L";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        flavor = "balanced";
        hold-trigger-key-positions = <57 56 55 54 53>;
        quick-tap-ms = <175>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
    };

    hrm_r: hrm_r {
        compatible = "zmk,behavior-hold-tap";
        label = "HRM_R";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <280>;
        flavor = "balanced";
        hold-trigger-key-positions = <59 60 61 62 63>;
        quick-tap-ms = <175>;
        hold-trigger-on-release;
        require-prior-idle-ms = <150>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        querty {
            bindings = <
&kp ESC           &kp N1                 &kp N2             &kp N3               &kp N4              &kp N5       &kp UP_ARROW     &kp N6     &kp N7              &kp N8                &kp N9              &kp N0                     &kp MINUS
&kp TAB           &kp Q                  &kp W              &kp E                &kp R               &kp T        &kp DOWN_ARROW   &kp Y      &kp U               &kp I                 &kp O               &kp P                      &kp BSLH
&kp GRAVE         &hrm_l LEFT_CONTROL A  &hrm_l LEFT_ALT S  &hrm_l LEFT_SHIFT D  &hrm_l RIGHT_GUI F  &kp G        &kp LEFT_ARROW   &kp H      &hrm_r RIGHT_GUI J  &hrm_r RIGHT_SHIFT K  &hrm_r RIGHT_ALT L  &hrm_r RIGHT_CONTROL SEMI  &kp APOS
&kp LEFT_BRACKET  &kp Z                  &kp X              &kp C                &kp V               &kp B        &kp RIGHT_ARROW  &kp N      &kp M               &kp COMMA             &kp DOT             &kp FSLH                   &kp RBKT
&kp C_MUTE        &kp LEFT_CONTROL       &kp LEFT_GUI       &mo 1                &kp LEFT_ALT        &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER           &mo 2                 &kp BACKSPACE       &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "querty";
        };

        nav {
            bindings = <
&kp F1    &kp F2       &kp F3          &kp F4          &kp F5           &kp F6           &mmv MOVE_UP     &kp F7           &kp F8           &kp F9      &kp F10    &kp F11           &kp F12
&trans    &kp PAGE_UP  &kp BACKSPACE   &kp UP_ARROW    &kp DEL          &kp PAGE_DOWN    &mmv MOVE_DOWN   &kp PG_UP        &kp END          &kp UP      &kp HOME   &kp MINUS         &kp EQUAL
&trans    &kp HOME     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp END          &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT         &kp DOWN    &kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans    &trans       &kp TAB         &trans          &kp ENTER        &trans           &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp INSERT  &kp F11    &kp F12           &trans
&kp C_PP  &trans       &trans          &trans          &trans           &trans           &mkp LCLK        &trans           &trans           &trans      &trans     &trans
            >;

            display-name = "nav";
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV>;
        };

        num {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans           &trans           &trans           &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_DIVIDE  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MULTIPLY  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp KP_MINUS   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &kp KP_NUMBER_1  &kp KP_N2        &kp KP_NUMBER_3  &kp KP_N0        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans         &trans           &trans           &trans           &trans
            >;

            label = "num";
        };

        sys {
            bindings = <
&out OUT_BLE    &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_UP     &kp F6  &kp F7  &kp F8      &kp F9     &kp F10      &trans
&out OUT_USB    &bt BT_CLR       &bt BT_CLR_ALL   &trans           &rgb_ug RGB_SPI  &rgb_ug RGB_SPD    &mmv MOVE_DOWN   &trans  &trans  &kp F11     &kp F12    &kp UNDER    &kp PLUS
&rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD    &mmv MOVE_LEFT   &trans  &trans  &trans      &trans     &kp LBRC     &kp RBRC
&trans          &sys_reset       &trans           &bootloader      &trans           &trans             &mmv MOVE_RIGHT  &trans  &trans  &sys_reset  &soft_off  &bootloader  &trans
&trans          &trans           &trans           &trans           &trans           &trans             &mkp LCLK        &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_FAST_FORWARD C_REWIND>;
            label = "sys";
        };

        mine {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "mine";
        };

        game {
            display-name = "game";
            bindings = <
&kp ESC           &kp N1     &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9           &kp N0         &kp MINUS
&kp TAB           &kp Q      &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O            &kp P          &kp BSLH
&kp LEFT_SHIFT    &kp A      &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L            &kp SEMI       &kp APOS
&kp LEFT_CONTROL  &kp Z      &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT          &kp FSLH       &kp ENTER
&kp C_MUTE        &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp SPACE  &kp ENTER  &mo 2      &kp RIGHT_SHIFT  &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        activate_sys {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
